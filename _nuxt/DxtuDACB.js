import{_ as I,V as S}from"./Dhsk5siO.js";import{_ as F}from"./BLvr8WAl.js";import{u as M}from"./vr0GXthl.js";import{u as R}from"./EZrBHMOP.js";import{d as K,c as P,a as g,o as $,b5 as B,b6 as z,h as y,G as d,w as T,u as C,f as E,e as G,m as H,_ as L,v as A,K as O,b7 as _,b8 as W,ae as j}from"./DiI907Pg.js";import{V as q}from"./BKb5xgJT.js";const J=["innerHTML"],N=K({__name:"WarTooltip",props:{description:{},descriptionClass:{},disabled:{type:Boolean},src:{},coords:{},padding:{}},setup(o){const u=M("tooltipsDisabled","false"),p=R(),i=P(()=>{const e=o.disabled||u.value==="true";return p.value?!e:e});return(e,n)=>{const c=I,a=F;return $(),g("div",B(z(e.$attrs)),[y(c,null,{default:T(()=>[y(S,{location:"bottom center",activator:"parent","max-width":"350","close-on-content-click":"",transition:{component:C(q)},disabled:C(i),class:"tooltip-opacity"},{default:T(()=>[d(e.$slots,"tooltip:body",{},()=>[d(e.$slots,"tooltip",{},void 0,!0),o.description?($(),g("div",{key:0,class:G([o.descriptionClass,"war-tooltip"]),innerHTML:o.description},null,10,J)):E("",!0),d(e.$slots,"postfix",{},void 0,!0)],!0)]),_:3},8,["transition","disabled"])]),_:3}),y(a,H({src:o.src,coords:o.coords,padding:o.padding,width:"100%"},e.$attrs),null,16,["src","coords","padding"]),d(e.$slots,"default",{},void 0,!0)],16)}}}),oe=L(N,[["__scopeId","data-v-9e81cf30"]]),b=new Map,te=async(o,u,p)=>{const i=A().currentRoute.value,e=u??i.params.versionType??"og";let n=p??i.params.version??"latest";const c=O[e];if(!c)throw _("unknown version type");n==="latest"&&(n=W[e]);const a=`${e}-${n}-${o}`,l=j(`race-cache-${a}`,()=>null);let s,t;if(l.value)({raceDataFile:s,versionIndex:t}=l.value);else if(b.has(a))({raceDataFile:s,versionIndex:t}=b.get(a)),l.value={raceDataFile:s,versionIndex:t};else{const r=c[n];if(!r)throw _("unknown version");if(t=await r(),!(o in t.racesData))throw _("No race found");s=await t.racesData[o](),l.value={raceDataFile:s,versionIndex:t},b.set(a,{raceDataFile:s,versionIndex:t})}const V=(r,m)=>{if(!m||m===1){const[w,v,f,h]=s.icons[r]??[0,0,1,1];return{x:w,y:v,width:f,height:h}}return Array.from({length:m},(w,v)=>{const f=`${r}-${v+1}`,[h,D,k,x]=s.icons[f]??[0,0,1,1];return{x:h,y:D,width:k,height:x}})};return{raceData:s.data,raceIconsCoords:s.icons,iconProps:V,iconsSrc:t.racesIcons[o],version:t.version,versionType:t.versionType}};export{oe as _,te as u};
